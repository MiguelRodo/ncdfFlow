% Generated by roxygen2 (4.0.0): do not edit by hand
\docType{class}
\name{ncdfFlowSet-class}
\alias{Subset,ncdfFlowSet,filter-method}
\alias{Subset,ncdfFlowSet,filterResultList-method}
\alias{Subset,ncdfFlowSet,list-method}
\alias{[,ncdfFlowList,ANY-method}
\alias{colnames<-}
\alias{compensate,ncdfFlowSet,ANY-method}
\alias{densityplot,formula,ncdfFlowSet-method}
\alias{ncdfFlowSet-class}
\alias{sampleNames<-}
\alias{show,ncdfFlowSet-method}
\alias{split,ncdfFlowSet,character-method}
\alias{split,ncdfFlowSet,factor-method}
\alias{split,ncdfFlowSet,filter-method}
\alias{split,ncdfFlowSet,filterResultList-method}
\alias{split,ncdfFlowSet,list-method}
\alias{transform,ncdfFlowSet-method}
\alias{xyplot,formula,ncdfFlowSet-method}
\title{a class for storing flow cytometry raw data in HDF5 format}
\usage{
\S4method{[}{ncdfFlowList,ANY}(x, i, j, ..., drop = TRUE)

\S4method{compensate}{ncdfFlowSet,ANY}(x, spillover)

\S4method{transform}{ncdfFlowSet}(`_data`, ...)

\S4method{show}{ncdfFlowSet}(object)

\S4method{densityplot}{formula,ncdfFlowSet}(x, data, ...)

\S4method{xyplot}{formula,ncdfFlowSet}(x, data, ...)

\S4method{split}{ncdfFlowSet,filter}(x, f, drop = FALSE, population = NULL,
  prefix = NULL, ...)

\S4method{split}{ncdfFlowSet,filterResultList}(x, f, drop = FALSE,
  population = NULL, prefix = NULL, ...)

\S4method{split}{ncdfFlowSet,list}(x, f, isNew = FALSE, drop = FALSE,
  population = NULL, prefix = NULL, ...)

\S4method{split}{ncdfFlowSet,factor}(x, f, isNew = FALSE, drop = FALSE, ...)

\S4method{split}{ncdfFlowSet,character}(x, f, drop = FALSE, ...)

\S4method{Subset}{ncdfFlowSet,filterResultList}(x, subset, select, ...)

\S4method{Subset}{ncdfFlowSet,filter}(x, subset, ...)

\S4method{Subset}{ncdfFlowSet,list}(x, subset, select, ...)
}
\arguments{
\item{x}{
    object from which to extract element(s) or in which to replace element(s).
  }

\item{i}{
    indices specifying elements to extract or replace.  Indices are
    \code{numeric} or \code{character} vectors or empty (missing) or
    \code{NULL}.  Numeric values are coerced to integer as by
    \code{\link{as.integer}} (and hence truncated towards zero).
    Character vectors will be matched to the \code{\link{names}} of the
    object (or for matrices/arrays, the \code{\link{dimnames}}):
    see \sQuote{Character indices} below for further details.

    For \code{[}-indexing only: \code{i}, \code{j}, \code{\dots} can be
    logical vectors, indicating elements/slices to select.  Such vectors
    are recycled if necessary to match the corresponding extent.
    \code{i}, \code{j}, \code{\dots} can also be negative integers,
    indicating elements/slices to leave out of the selection.

    When indexing arrays by \code{[} a single argument \code{i} can be a
    matrix with as many columns as there are dimensions of \code{x}; the
    result is then a vector with elements corresponding to the sets of
    indices in each row of \code{i}.

    An index value of \code{NULL} is treated as if it were \code{integer(0)}.
  }

\item{drop}{For matrices and arrays.  If \code{TRUE} the result is
    coerced to the lowest possible dimension (see the examples).  This
    only works for extracting elements, not for the replacement.  See
    \code{\link{drop}} for further details.
  }

\item{...}{Further arguments. 

    The constructor is designed to be useful in both programmatic and
    interactive settings, and \dots serves as a container for possible
    arguments. The following combinations of values are allowed:

    Elements in \dots are \code{character} scalars of parameter names or
    \code{\linkS4class{transform}} objects and the colnames in
    \code{spillover} match to these parameter names.
  
    The first element in \dots is a \code{character} vector of parameter
    names or a list of \code{character} scalars or
    \code{\linkS4class{transform}} objects and the colnames in
    \code{spillover} match to these parameter names.

    Argument \code{spillover} is missing and the first element in \dots
    is a \code{matrix}, in which case it is assumed to be the spillover
    matrix.

    \dots is missing, in which case all parameter names are taken from the
    colnames of \code{spillover}.
  
  }

\item{spillover}{ The spillover or compensation matrix. }

\item{_data}{The object to be transformed}

\item{object}{Any R object}

\item{data}{
    For the \code{formula} method, an optional data source (usually a
    data frame) in which variables are to be evaluated (see
    \code{\link{xyplot}} for details).  \code{data} should not be
    specified for the other methods, and is ignored with a warning if it
    is.
  }

\item{subset}{ See \code{\link{xyplot}}. }

\item{f}{a \sQuote{factor} in the sense that \code{\link{as.factor}(f)}
    defines the grouping, or a list of such factors in which case their
    interaction is used for the grouping.}
}
\description{
This class is a subclass of
  \code{\link{flowSet}}. It stores the raw data in cdf file instead of memory so that the analysis tools
  provided by flowCore based packages can be used in the study that produces hundreds or thousands FCS files.
}
\section{Slots}{

 \describe{

\item{\code{file}:}{A character containing the ncdf file name.}
\item{\code{maxEvents}:}{An integer containing the maximum number of events of all samples stored in this ncdfFlowSet object }
\item{\code{flowSetId}:}{A character for the id of ncdfFlowSet object }
\item{\code{indices}:}{Object of class \code{"environment"} containing events indices of each sample stored as \code{"raw"} vector. Each index value is either TURE or FALSE and the entire indices vector is used to subset the raw data.
                        the indices vector of each sample is NA by default when the ncdfFlowSet first created.It is assigned with actual value when ncdfFlowSet object is subsetted by \code{\link{Subset}}
                         or other subsetting methods.}
\item{\code{origSampleVector}:}{A character vector containing the sample names,
                                 which indicates the original order of samples physically stored in cdf format}
\item{\code{origColnames}:}{A character vector containing the flow channel names,
                             which indicates the original order of columns physically stored in cdf format}

\item{\code{frames}:}{Object of class \code{"environment"}, which replicates the "frame" slot in \code{\link{flowSet}},
                     except that  \code{\link[=exprs,flowFrame-method]{exprs}} matrix is empty and the actual data is stored in cdf file. }
\item{\code{phenoData}:}{see \code{\link[=phenoData,flowSet-method]{phenoData}}}
\item{\code{colnames}:}{see \code{\link[=colnames,flowSet-method]{colnames}}. Here it serves as the current data view which does not reflect the actual number and order of columns stored in cdf file.}
}
}

\section{Extends}{

Class \code{"\linkS4class{flowSet}"}, directly.
}

